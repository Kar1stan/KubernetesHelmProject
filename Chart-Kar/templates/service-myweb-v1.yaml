apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Release.Name}}-deployment
  labels: 
     app: {{.Release.Name}}-application
     env: prod
     owner: VladislavKarastan
spec:
  replicas: {{.Values.replicaCount}}
  selector:
    matchLabels:
       project: {{.Release.Name}}
  template:
    metadata:
       labels:
         project: {{.Release.Name}} # Service will look for those PODS Labels
    spec:
      containers:
         - name : {{.Release.Name}}-tom-web
           image: {{.Values.container.image1}}
           ports:
            - containerPort: 80 # Port on POD
          
         - name : {{.Release.Name}}-nginx-web
           image: {{.Values.container.image2}}
           ports:
            - containerPort: 8080 # Port on POD
          


---
apiVersion: v1
kind: Service
metadata:
  name: {{.Release.Name}}-service
  labels:
    env: prod
    owner: VladKarastan
spec:
  type: LoadBalancer
  selector:
    project: {{.Release.Name}} # Selecting PODS with those Labels
  ports:
    - name      : {{.Release.Name}}-tomweb-listener
      protocol  : TCP
      port      : 80 #Port on LoadBalancer
      targetPort: 80 #Port on POD

    - name      : {{.Release.Name}}-nginxweb-listener
      protocol  : TCP
      port      : 8888 #Port on LoadBalancer
      targetPort: 8080 #Port on POD
  